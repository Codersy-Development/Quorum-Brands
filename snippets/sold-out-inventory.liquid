{% comment %}
  Simple Sold Out Inventory Display
  Shows red icon and "Sold Out" message for out of stock products
  Only shows for wholesale customers and non-logged in users
{% endcomment %}

<!-- DEBUG: Always show this to confirm the snippet is loading -->
<div style="background: yellow; padding: 5px; margin: 5px 0;">
  ðŸš¨ SOLD OUT SNIPPET LOADED ðŸš¨
</div>

{%- liquid
  assign current_variant = product.selected_or_first_available_variant
  assign show_sold_out = false
  
  # Check if customer is wholesale (reuse your existing logic)
  assign wcp_wholesale_customer = false
  if shop.metafields.wcp_status.wcp_status != 'disabled' and customer
    assign active_discounts = shop.metafields.wcp_active_discounts.wcp_active_discounts
    assign active_discounts_array = active_discounts | split: ','
    assign customer_tags = blank
    
    for tag in customer.tags
      assign tempTag = tag | downcase
      assign customer_tags = customer_tags | append: tempTag
      unless forloop.last
        assign customer_tags = customer_tags | append: ','
      endunless
    endfor
    
    assign customer_tags = customer_tags | split: ','
    assign active_discounts = active_discounts | downcase
    
    for discount_key in active_discounts_array
      assign key_split = discount_key | split: '-'
      assign key_split_length = key_split | size
      if key_split_length > 2
        assign removeable_key = key_split.last | prepend: '-'
        assign wcp_customer_tag = discount_key | remove_last: removeable_key
      else
        assign wcp_customer_tag = key_split[0]
      endif
      assign wcp_customer_tag = wcp_customer_tag | downcase
      if customer_tags contains wcp_customer_tag
        assign wcp_wholesale_customer = true
      endif
    endfor
  endif
  
  # Only show sold out indicator for:
  # 1. Wholesale customers OR
  # 2. Non-logged in users (customer == null)
  if current_variant.inventory_management == 'shopify' and current_variant.inventory_quantity <= 0
    if wcp_wholesale_customer == true or customer == null
      assign show_sold_out = true
    endif
  endif
-%}

<!-- DEBUG: Show all the variables -->
<div style="background: lightblue; padding: 10px; margin: 5px 0; font-size: 12px;">
  <strong>DEBUG INFO:</strong><br>
  inventory_quantity: {{ current_variant.inventory_quantity }}<br>
  inventory_management: {{ current_variant.inventory_management }}<br>
  customer exists: {{ customer != null }}<br>
  wcp_wholesale_customer: {{ wcp_wholesale_customer }}<br>
  show_sold_out: {{ show_sold_out }}<br>
  Condition 1 (inventory <= 0): {{ current_variant.inventory_quantity <= 0 }}<br>
  Condition 2 (wholesale OR not logged in): {{ wcp_wholesale_customer == true or customer == null }}
</div>

<style>
  .sold-out-indicator {
    display: block !important;
    margin: 10px 0;
    padding: 8px 0;
  }
  
  .sold-out-indicator .icon-and-text {
    display: inline-flex !important;
    align-items: center;
    gap: 8px;
  }
  
  .sold-out-indicator .icon--inventory {
    fill: #dc2626 !important; /* Red color */
  }
  
  .sold-out-text {
    color: #dc2626 !important; /* Red color */
    font-weight: 600;
    font-size: 14px;
  }
  
  /* Ensure this always shows for sold out products */
  .sold-out-indicator:not(.force-hide) {
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
  }
</style>

{%- if show_sold_out -%}
  <div class="sold-out-indicator" data-sold-out-display>
    <span class="icon-and-text">
      <span class="icon icon--inventory" style="fill: #dc2626;"></span>
      <span class="sold-out-text">{{ 'products.product.sold_out' | t | default: 'Sold Out' }}</span>
    </span>
  </div>
  
  <script>
    // Ensure sold out indicator stays visible
    document.addEventListener('DOMContentLoaded', function() {
      const soldOutIndicator = document.querySelector('[data-sold-out-display]');
      
      if (soldOutIndicator) {
        // Force it to be visible
        soldOutIndicator.style.display = 'block';
        soldOutIndicator.style.visibility = 'visible';
        soldOutIndicator.style.opacity = '1';
        
        // Watch for any attempts to hide it
        const observer = new MutationObserver(function(mutations) {
          mutations.forEach(function(mutation) {
            if (mutation.type === 'attributes') {
              // Reset display if something tries to hide it
              if (soldOutIndicator.style.display === 'none' || 
                  soldOutIndicator.style.visibility === 'hidden') {
                soldOutIndicator.style.display = 'block';
                soldOutIndicator.style.visibility = 'visible';
                soldOutIndicator.style.opacity = '1';
              }
            }
          });
        });
        
        observer.observe(soldOutIndicator, {
          attributes: true,
          attributeFilter: ['style', 'class']
        });
      }
    });
  </script>
{%- endif -%}