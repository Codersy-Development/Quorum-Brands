{{ 'custom-product-slider-carousel.css' | asset_url | stylesheet_tag }}
<section
    class="product-feature-carousel room-feature"
    {% unless section.settings.store == "all" %}
        data-store="{{ section.settings.store }}"
    {% endunless %}
>
    <div class="container">
        <div class="feature-grid">
            <!-- Main Large Image - Changes with carousel -->
            <div class="feature-left">
                {% assign first_block = section.blocks[0] %}
                <div class="main-image-container">
                    {% if first_block.settings.main_image_url %}
                        <a href="{{ first_block.settings.main_image_url }}" target="_blank" rel="noopener" class="main-image-link" id="mainImageLink">
                            <img id="mainImageDynamic" src="{{ first_block.settings.main_image | img_url: 'master' }}" alt="Main Room Image" class="main-image">
                        </a>
                    {% else %}
                        <img id="mainImageDynamic" src="{{ first_block.settings.main_image | img_url: 'master' }}" alt="Main Room Image" class="main-image">
                    {% endif %}
                </div>
            </div>

            <!-- Product Card Carousel -->
            <div class="feature-right">
                <div class="feature-card">
                    <div class="card-swiper swiper">
                        <div class="swiper-wrapper">
                            {% for block in section.blocks %}
                                <div class="swiper-slide product-card" 
                                     data-main-image="{{ block.settings.main_image | img_url: 'master' }}"
                                     data-main-image-url="{{ block.settings.main_image_url }}"
                                     data-slide-number="{{ forloop.index }}"
                                     {{ block.shopify_attributes }}>
                                    
                                    <!-- Card Image Section -->
                                    {% if block.settings.card_image %}
                                        <div class="card-image-section">
                                            {% if block.settings.card_image_url %}
                                                <a href="{{ block.settings.card_image_url }}" target="_blank" rel="noopener" class="card-image-link">
                                                    <img src="{{ block.settings.card_image | img_url: 'master' }}" alt="Product Image" class="card-image">
                                                </a>
                                            {% else %}
                                                <img src="{{ block.settings.card_image | img_url: 'master' }}" alt="Product Image" class="card-image">
                                            {% endif %}
                                        </div>
                                    {% endif %}

                                    <!-- Card Content Section -->
                                    <div class="card-content">
                                        {% if block.settings.heading %}
                                            <h2 class="card-title">{{ block.settings.heading }}</h2>
                                        {% endif %}
                                        {% if block.settings.text %}
                                            <p class="card-text">{{ block.settings.text }}</p>
                                        {% endif %}
                                        {% if block.settings.button_label and block.settings.button_link %}
                                            <a href="{{ block.settings.button_link }}" class="card-button">{{ block.settings.button_label }}</a>
                                        {% endif %}
                                    </div>
                                </div>
                            {% endfor %}
                        </div>

                        <!-- Navigation Controls -->
                        <div class="product-button-wrapper">
                            <div class="product-button-prev">
                                <img src="{{ 'ico-arrow-right.svg' | asset_url }}" alt="Previous">
                            </div>
                            <div class="product-button-next">
                                <img src="{{ 'ico-arrow-right.svg' | asset_url }}" alt="Next">
                            </div>
                        </div>

                        <!-- Slide Counter -->
                        <div class="slide-counter">
                            <span class="current-slide">1</span> / <span class="total-slides">{{ section.blocks.size }}</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<link rel="stylesheet" href="https://unpkg.com/swiper@8/swiper-bundle.min.css" />
<script src="https://unpkg.com/swiper@8/swiper-bundle.min.js"></script>

<style>
/* Main Image Styling */
.main-image-container {
    position: relative;
    overflow: hidden;
    border-radius: 8px;
    transition: box-shadow 0.3s ease;
}

.main-image {
    width: 100%;
    height: auto;
    display: block;
    transition: opacity 0.5s ease;
}

.main-image-link, .card-image-link {
    display: block;
    cursor: pointer;
    transition: opacity 0.3s ease, transform 0.3s ease;
}

.main-image-link:hover, .card-image-link:hover {
    opacity: 0.9;
    transform: scale(1.02);
}

/* Product Card Styling */
.product-card {
    display: flex;
    flex-direction: column;
    height: 100%;
    position: relative;
}

.card-image-section {
    margin-bottom: 1.5rem;
}

.card-content {
    flex-grow: 1;
}

/* Slide Counter */
.slide-counter {
    text-align: center;
    margin-top: 1rem;
    font-size: 0.9rem;
    color: #666;
}

.current-slide {
    font-weight: bold;
    color: #333;
}

/* Active State for Product Cards */
.swiper-slide-active.product-card {
    border-radius: 8px;
    padding: 1rem;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

/* Navigation button styling */
.product-button-wrapper div {
    cursor: pointer;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .feature-grid {
        flex-direction: column;
    }
}
</style>

<script>
let currentSlideIndex = 0;
let slideData = [];
let totalSlides = 0;

document.addEventListener('DOMContentLoaded', function () {
    console.log('=== CAROUSEL INITIALIZATION ===');
    
    const mainImage = document.getElementById('mainImageDynamic');
    
    if (!mainImage) {
        console.error('Main image element not found');
        return;
    }

    // Collect slide data from the DOM
    const slides = document.querySelectorAll('.swiper-slide[data-main-image]');
    totalSlides = slides.length;
    
    slides.forEach((slide, index) => {
        const imageUrl = slide.getAttribute('data-main-image');
        const linkUrl = slide.getAttribute('data-main-image-url');
        slideData.push({
            imageUrl: imageUrl,
            linkUrl: linkUrl,
            slideNumber: index + 1
        });
        console.log(`Slide ${index + 1}: Image = ${imageUrl}`);
    });

    // Initialize Swiper with basic settings only
    const swiper = new Swiper('.card-swiper', {
        slidesPerView: 1,
        navigation: {
            nextEl: '.product-button-next',
            prevEl: '.product-button-prev',
        },
        loop: false,
        effect: 'slide',
        speed: 500,
        allowTouchMove: true,
        on: {
            slideChange: function() {
                // Update our manual tracking
                currentSlideIndex = this.activeIndex;
                updateMainImageFromIndex(currentSlideIndex);
                updateSlideCounter();
                console.log('Swiper moved to slide:', currentSlideIndex + 1);
            }
        }
    });

    // Store swiper globally for manual control
    window.mySwiper = swiper;

    console.log('Carousel initialized with', totalSlides, 'slides');
    console.log('Initial main image:', mainImage.src);
    updateSlideCounter();
});

// Function to update main image based on index
function updateMainImageFromIndex(index) {
    console.log('Updating main image for index:', index);
    
    const mainImage = document.getElementById('mainImageDynamic');
    if (!mainImage) {
        console.error('Main image element not found');
        return;
    }

    const slideInfo = slideData[index];
    if (!slideInfo) {
        console.error('No slide data found for index:', index);
        return;
    }

    console.log('Changing to:', slideInfo.imageUrl);
    
    // Change the main image with fade effect
    if (slideInfo.imageUrl) {
        mainImage.style.opacity = '0.3';
        
        setTimeout(() => {
            mainImage.src = slideInfo.imageUrl;
            mainImage.style.opacity = '1';
            console.log('Main image changed successfully');
            
            // Update the link
            updateMainImageLink(slideInfo.linkUrl);
        }, 200);
    }
}

// Function to update slide counter
function updateSlideCounter() {
    const currentSlideElement = document.querySelector('.current-slide');
    if (currentSlideElement) {
        currentSlideElement.textContent = currentSlideIndex + 1;
    }
}

// Function to update main image link
function updateMainImageLink(newUrl) {
    const mainImage = document.getElementById('mainImageDynamic');
    const mainImageContainer = document.querySelector('.feature-left');
    const existingLink = mainImageContainer.querySelector('.main-image-link');
    
    if (newUrl) {
        if (existingLink) {
            existingLink.href = newUrl;
            console.log('Updated link to:', newUrl);
        } else {
            // Create new link wrapper
            const link = document.createElement('a');
            link.href = newUrl;
            link.target = '_blank';
            link.rel = 'noopener';
            link.className = 'main-image-link';
            link.id = 'mainImageLink';
            
            // Wrap the image
            mainImage.parentNode.insertBefore(link, mainImage);
            link.appendChild(mainImage);
            console.log('Created new link:', newUrl);
        }
    } else {
        if (existingLink) {
            // Remove link wrapper, keep image
            const parent = existingLink.parentNode;
            parent.insertBefore(mainImage, existingLink);
            parent.removeChild(existingLink);
            console.log('Removed link wrapper');
        }
    }
}

// Test function for debugging
function goToSlide(slideNumber) {
    console.log('Going to slide:', slideNumber);
    const index = slideNumber - 1;
    if (index >= 0 && index < totalSlides) {
        currentSlideIndex = index;
        if (window.mySwiper && typeof window.mySwiper.slideTo === 'function') {
            window.mySwiper.slideTo(index);
        } else {
            updateMainImageFromIndex(index);
            updateSlideCounter();
        }
    }
}
</script>

{% schema %}
{
  "name": "Product Feature Carousel",
  "tag": "section",
  "class": "room-feature-carousel",
  "settings": [
    {
      "type": "select",
      "id": "store",
      "label": "Store",
      "info": "Populate this to show only on specific store",
      "options": [
        { "value": "all", "label": "Show On Both" },
        { "value": "explore all brands", "label": "explore all brands" },
        { "value": "quorum", "label": "Quorum" },
        { "value": "oxygen", "label": "Oxygen" }
      ],
      "default": "all"
    }
  ],
  "blocks": [
    {
      "type": "card_slide",
      "name": "Product Card",
      "settings": [
        {
          "type": "header",
          "content": "Main Large Image (Left Side)"
        },
        {
          "type": "image_picker",
          "id": "main_image",
          "label": "Main Large Image",
          "info": "This image displays on the left and changes with each card"
        },
        {
          "type": "url",
          "id": "main_image_url",
          "label": "Main Image URL",
          "info": "Make the main large image clickable - opens in new tab"
        },
        {
          "type": "header",
          "content": "Card Image (Right Side)"
        },
        {
          "type": "image_picker",
          "id": "card_image",
          "label": "Card Image",
          "info": "This image displays in the card on the right side"
        },
        {
          "type": "url",
          "id": "card_image_url",
          "label": "Card Image URL",
          "info": "Make the card image clickable - opens in new tab"
        },
        {
          "type": "header",
          "content": "Card Content"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading Text",
          "default": "Shop by Room: Dining"
        },
        {
          "type": "textarea",
          "id": "text",
          "label": "Paragraph Text",
          "default": "Designed to enhance every meal, our dining selection combines timeless style with thoughtful functionality."
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button Label",
          "default": "Explore Products"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Feature Carousel"
    }
  ]
}
{% endschema %}