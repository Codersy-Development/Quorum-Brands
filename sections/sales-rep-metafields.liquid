{% comment %}sections/sales-representatives.liquid{% endcomment %}

<div class="page-width">
  {% if section.settings.show_search_controls %}
  <div class="sales-reps-header text-center margin-bottom-3">
    <h1>{{ section.settings.title }}</h1>
    <div class="rte">{{ section.settings.description }}</div>
  </div>

  <div class="search-filters margin-bottom-3">
    <div class="search-container">
      <input 
        type="text" 
        id="repSearch" 
        class="search-input" 
        placeholder="Search by name or group..."
      >
      <select id="territoryFilter" class="territory-select">
        <option value="">All Territories</option>
        {% assign all_territories = '' %}
        
        <!-- Collect territories from manual blocks -->
        {% for section_check in template.sections %}
          {% if section_check.type == 'sales-representatives' %}
            {% for block in section_check.blocks %}
              {% if block.type == 'rep' and block.settings.territory != blank %}
                {% assign territories = block.settings.territory | replace: '.', ',' | replace: '/', ',' | split: ',' %}
                {% for territory in territories %}
                  {% assign cleaned_territory = territory | strip %}
                  {% if cleaned_territory != '' %}
                    {% assign all_territories = all_territories | append: '^' | append: cleaned_territory %}
                  {% endif %}
                {% endfor %}
              {% endif %}
            {% endfor %}
          {% endif %}
        {% endfor %}
        
        <!-- Collect territories from customer metafields -->
        {% assign customers_with_reps = shop.customers | where: 'metafields.custom.sr_name', 'ne', blank %}
        {% for customer in customers_with_reps %}
          {% if customer.metafields.custom.sr_territory != blank %}
            {% assign territories = customer.metafields.custom.sr_territory | replace: '.', ',' | replace: '/', ',' | split: ',' %}
            {% for territory in territories %}
              {% assign cleaned_territory = territory | strip %}
              {% if cleaned_territory != '' %}
                {% assign all_territories = all_territories | append: '^' | append: cleaned_territory %}
              {% endif %}
            {% endfor %}
          {% endif %}
        {% endfor %}
        
        {% assign territory_array = all_territories | split: '^' %}
        {% assign unique_sorted_territories = territory_array | uniq | sort %}
        
        {% for territory in unique_sorted_territories %}
          {% if territory != '' %}
            <option value="{{ territory | strip | escape }}">{{ territory | strip }}</option>
          {% endif %}
        {% endfor %}
      </select>
    </div>
  </div>

  <!-- Results count -->
  <div class="results-info margin-bottom-2">
    <p id="resultsCount"></p>
  </div>
  {% endif %}

  <!-- All rep cards container -->
  <div class="sales-reps-grid" id="repsContainer{{ section.id }}">
    
    <!-- Manual rep cards from section blocks -->
    {% for block in section.blocks %}
      {% if block.type == 'rep' %}
        <div class="sales-rep-card" 
          data-territories="{{ block.settings.territory | replace: '.', ',' | replace: '/', ',' | escape }}"
          data-name="{{ block.settings.name | strip | escape }}"
          data-group="{{ block.settings.rep_group | strip | escape }}"
          data-source="manual"
          {{ block.shopify_attributes }}>
          <h3>{{ block.settings.name }}</h3>
          {% if block.settings.rep_group != blank %}
            <p class="rep-group">{{ block.settings.rep_group }}</p>
          {% endif %}
          <div class="rep-details">
            {% if block.settings.position != blank %}
              <p class="position">{{ block.settings.position }}</p>
            {% endif %}
            {% if block.settings.territory != blank %}
              <p class="territory">
                Territory: {{ block.settings.territory }}
                {% if block.settings.territory_detail != blank %}
                  <span class="territory-detail">{{ block.settings.territory_detail }}</span>
                {% endif %}
              </p>
            {% endif %}
            {% if block.settings.email != blank %}
              <p class="email">
                <a href="mailto:{{ block.settings.email }}">{{ block.settings.email }}</a>
              </p>
            {% endif %}
            {% if block.settings.phone != blank %}
              <p class="phone">{{ block.settings.phone }}</p>
            {% endif %}
            {% if block.settings.website != blank %}
              <p class="website">
                <a href="{{ block.settings.website }}" target="_blank" rel="noopener">{{ block.settings.website | remove: 'https://' | remove: 'http://' | remove: 'www.' }}</a>
              </p>
            {% endif %}
          </div>
        </div>
      {% endif %}
    {% endfor %}

    <!-- Rep cards from customer metafields -->
    {% if section.settings.include_customer_reps %}
      {% assign customers_with_reps = shop.customers | where: 'metafields.custom.sr_name', 'ne', blank %}
      {% assign processed_reps = '' %}
      
      {% for customer in customers_with_reps %}
        {% assign rep_name = customer.metafields.custom.sr_name | strip %}
        {% assign rep_email = customer.metafields.custom.sr_email | strip %}
        
        <!-- Create unique identifier for rep to avoid duplicates -->
        {% assign rep_identifier = rep_name | append: '|' | append: rep_email %}
        
        {% unless processed_reps contains rep_identifier %}
          {% assign processed_reps = processed_reps | append: '^' | append: rep_identifier %}
          
          <div class="sales-rep-card" 
            data-territories="{{ customer.metafields.custom.sr_territory | replace: '.', ',' | replace: '/', ',' | escape }}"
            data-name="{{ rep_name | escape }}"
            data-group="{{ customer.metafields.custom.sr_rep_group | strip | escape }}"
            data-source="customer">
            <h3>{{ rep_name }}</h3>
            {% if customer.metafields.custom.sr_rep_group != blank %}
              <p class="rep-group">{{ customer.metafields.custom.sr_rep_group }}</p>
            {% endif %}
            <div class="rep-details">
              {% if customer.metafields.custom.sr_position != blank %}
                <p class="position">{{ customer.metafields.custom.sr_position }}</p>
              {% endif %}
              {% if customer.metafields.custom.sr_territory != blank %}
                <p class="territory">
                  Territory: {{ customer.metafields.custom.sr_territory }}
                  {% if customer.metafields.custom.sr_territory_detail != blank %}
                    <span class="territory-detail">{{ customer.metafields.custom.sr_territory_detail }}</span>
                  {% endif %}
                </p>
              {% endif %}
              {% if customer.metafields.custom.sr_email != blank %}
                <p class="email">
                  <a href="mailto:{{ customer.metafields.custom.sr_email }}">{{ customer.metafields.custom.sr_email }}</a>
                </p>
              {% endif %}
              {% if customer.metafields.custom.sr_phone != blank %}
                <p class="phone">{{ customer.metafields.custom.sr_phone }}</p>
              {% endif %}
              {% if customer.metafields.custom.sr_cell_phone != blank %}
                <p class="phone cell-phone">Cell: {{ customer.metafields.custom.sr_cell_phone }}</p>
              {% endif %}
              {% if customer.metafields.custom.sr_website != blank %}
                <p class="website">
                  <a href="{{ customer.metafields.custom.sr_website }}" target="_blank" rel="noopener">{{ customer.metafields.custom.sr_website | remove: 'https://' | remove: 'http://' | remove: 'www.' }}</a>
                </p>
              {% endif %}
            </div>
          </div>
        {% endunless %}
      {% endfor %}
    {% endif %}
  </div>
</div>

{% if section.settings.show_search_controls %}
<div class="page-width">
  <div id="noResults" class="no-results" style="display: none;">
    <p>No sales representatives found matching your search criteria.</p>
  </div>

  <!-- Pagination Controls -->
  <div class="pagination" id="paginationContainer">
    <span class="prev" id="prevPage" style="display: none;">
      <a href="#" title="Previous">
        <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-left" viewBox="0 0 284.49 498.98">
          <title>icon-chevron</title>
          <path d="M249.49 0a35 35 0 0 1 24.75 59.75L84.5 249.49l189.74 189.74a35.002 35.002 0 0 1-49.5 49.5L10.25 274.24a35 35 0 0 1 0-49.5L224.74 10.25A34.89 34.89 0 0 1 249.49 0Z"></path>
        </svg>
        <span class="icon__fallback-text">Previous</span>
      </a>
    </span>
    
    <div id="pageNumbers"></div>
    
    <span class="next" id="nextPage" style="display: none;">
      <a href="#" title="Next">
        <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-chevron-right" viewBox="0 0 284.49 498.98">
          <title>icon-chevron</title>
          <path d="M35 498.98a35 35 0 0 1-24.75-59.75l189.74-189.74L10.25 59.75a35.002 35.002 0 0 1 49.5-49.5l214.49 214.49a35 35 0 0 1 0 49.5L59.75 488.73A34.89 34.89 0 0 1 35 498.98Z"></path>
        </svg>
        <span class="icon__fallback-text">Next</span>
      </a>
    </span>
  </div>
</div>
{% endif %}

<style>
  .search-filters {
    margin-bottom: 30px;
  }

  .search-container {
    display: flex;
    gap: 15px;
    max-width: 800px;
    margin: 0 auto;
  }

  .search-input {
    flex: 1;
    padding: 12px 15px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 16px;
  }

  .territory-select {
    padding: 12px 15px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 16px;
    min-width: 200px;
  }

  .results-info {
    text-align: center;
    margin-bottom: 20px;
  }

  .results-info p {
    color: #666;
    font-size: 14px;
  }

  .sales-rep-card {
    padding: 20px;
    margin-bottom: 20px;
    border: 1px solid #ddd;
    border-radius: 8px;
    transition: all 0.3s ease;
    position: relative;
  }
  
  .sales-rep-card:hover {
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
  }

  /* Badge for customer-sourced reps */
  .sales-rep-card[data-source="customer"]::before {
    content: "Customer Data";
    position: absolute;
    top: 10px;
    right: 10px;
    background: #e3f2fd;
    color: #1976d2;
    padding: 2px 8px;
    border-radius: 12px;
    font-size: 10px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .sales-rep-card h3 {
    margin: 0 0 10px 0;
  }
  
  .rep-group {
    color: #666;
    font-style: italic;
    margin-bottom: 10px;
  }
  
  .rep-details {
    margin-top: 15px;
  }
  
  .rep-details p {
    margin: 5px 0;
  }

  .email a {
    text-decoration: none;
  }

  .email a:hover {
    text-decoration: underline;
  }

  .email, .phone, .website {
    margin: 5px 0;
  }

  .cell-phone {
    font-style: italic;
    color: #666;
  }

  .website a {
    color: #0066cc;
    text-decoration: none;
  }

  .website a:hover {
    text-decoration: underline;
  }

  /* Territory section styles */
  .territory {
    position: relative;
    padding: 15px 0;
    margin: 15px 0 !important;
    border-top: 1px solid #998542;
    border-bottom: 1px solid #998542;
  }

  .territory-detail {
    display: block;
    font-style: italic;
    color: #666;
    font-size: 0.8em;
    margin-top: 5px;
  }

  .no-results {
    text-align: center;
    padding: 40px;
    font-size: 18px;
    color: #666;
  }

  /* Pagination Styles */
  .pagination {
    display: flex;
    justify-content: center;
    align-items: baseline;
    gap: 20px;
    margin-top: 40px;
    flex-wrap: wrap;
  }

  .pagination .page {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 8px 4px;
    background: none;
    border: none;
    font-size: 16px;
    line-height: 40px;
    height: 40px;
  }

  .pagination .page a {
    color: #121212;
    text-decoration: none;
    font-weight: normal;
    transition: opacity 0.3s ease;
    line-height: 1;
  }

  .pagination .page a:hover {
    opacity: 0.7;
  }

  .pagination .page.current {
    color: #999999;
    font-weight: normal;
    line-height: 1;
  }

  .pagination .prev,
  .pagination .next {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    background-color: #121212;
    border: none;
    cursor: pointer;
    transition: opacity 0.3s ease;
    flex-shrink: 0;
  }

  .pagination .prev:hover,
  .pagination .next:hover {
    opacity: 0.8;
  }

  .pagination .prev a,
  .pagination .next a {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    color: #ffffff;
    text-decoration: none;
  }

  .pagination .icon {
    width: 16px;
    height: 16px;
    fill: currentColor;
  }

  .pagination .icon__fallback-text {
    display: none;
  }

  @media screen and (max-width: 749px) {
    .pagination {
      gap: 15px;
    }

    .pagination .page {
      height: 36px;
      line-height: 36px;
    }

    .pagination .prev,
    .pagination .next {
      width: 36px;
      height: 36px;
    }

    .pagination .icon {
      width: 14px;
      height: 14px;
    }
  }
  
  @media screen and (min-width: 750px) {
    .sales-reps-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 20px;
    }
  }
  
  @media screen and (min-width: 990px) {
    .sales-reps-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  @media screen and (max-width: 749px) {
    .search-container {
      flex-direction: column;
    }
    
    .territory-select {
      width: 100%;
    }

    .pagination-controls {
      flex-direction: column;
    }

    .page-numbers {
      order: -1;
      justify-content: center;
    }
  }
</style>

<script>
  const repSearch = document.getElementById('repSearch');
  const territoryFilter = document.getElementById('territoryFilter');
  const repsContainer = document.getElementById('repsContainer{{ section.id }}');
  const noResults = document.getElementById('noResults');
  const paginationContainer = document.getElementById('paginationContainer');
  const pageNumbers = document.getElementById('pageNumbers');
  const prevPage = document.getElementById('prevPage');
  const nextPage = document.getElementById('nextPage');
  const resultsCount = document.getElementById('resultsCount');
  const repCards = document.querySelectorAll('.sales-rep-card');
  
  const ITEMS_PER_PAGE = {{ section.settings.items_per_page | default: 25 }};
  let currentPage = 1;
  let filteredCards = [];

  function getFilteredCards() {
    const searchTerm = repSearch.value.toLowerCase();
    const selectedTerritory = territoryFilter.value.toLowerCase();
    
    return Array.from(repCards).filter(card => {
      const territories = card.dataset.territories.toLowerCase().split(',').map(t => t.trim());
      const name = card.dataset.name.toLowerCase();
      const group = card.dataset.group.toLowerCase();
      
      const matchesSearch = name.includes(searchTerm) || group.includes(searchTerm);
      const matchesTerritory = selectedTerritory === '' || territories.some(t => t.includes(selectedTerritory));

      return matchesSearch && matchesTerritory;
    });
  }

  function updateResultsCount() {
    const totalResults = filteredCards.length;
    const startItem = totalResults > 0 ? (currentPage - 1) * ITEMS_PER_PAGE + 1 : 0;
    const endItem = Math.min(currentPage * ITEMS_PER_PAGE, totalResults);
    
    if (totalResults === 0) {
      resultsCount.textContent = 'No representatives found';
    } else if (totalResults <= ITEMS_PER_PAGE) {
      resultsCount.textContent = `Showing all ${totalResults} representatives`;
    } else {
      resultsCount.textContent = `Showing ${startItem}-${endItem} of ${totalResults} representatives`;
    }
  }

  function displayPage() {
    // Hide all cards first
    repCards.forEach(card => {
      card.style.display = 'none';
    });

    if (filteredCards.length === 0) {
      noResults.style.display = 'block';
      paginationContainer.style.display = 'none';
      updateResultsCount();
      return;
    }

    noResults.style.display = 'none';
    
    // Only show pagination if there are multiple pages
    const totalPages = Math.ceil(filteredCards.length / ITEMS_PER_PAGE);
    paginationContainer.style.display = totalPages > 1 ? 'flex' : 'none';

    // Calculate start and end indices for current page
    const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;
    const endIndex = startIndex + ITEMS_PER_PAGE;

    // Show cards for current page
    for (let i = startIndex; i < endIndex && i < filteredCards.length; i++) {
      filteredCards[i].style.display = '';
    }

    updateResultsCount();
    updatePaginationControls();
  }

  function updatePaginationControls() {
    const totalPages = Math.ceil(filteredCards.length / ITEMS_PER_PAGE);
    
    // Update previous/next buttons visibility
    const prevButton = document.getElementById('prevPage');
    const nextButton = document.getElementById('nextPage');
    
    if (currentPage === 1) {
      prevButton.style.display = 'none';
    } else {
      prevButton.style.display = 'inline-flex';
      prevButton.classList.remove('disabled');
    }
    
    if (currentPage === totalPages || totalPages === 0) {
      nextButton.style.display = 'none';
    } else {
      nextButton.style.display = 'inline-flex';
      nextButton.classList.remove('disabled');
    }

    // Clear page numbers
    pageNumbers.innerHTML = '';

    if (totalPages <= 1) {
      return;
    }

    // Generate page numbers with ellipsis logic
    const maxVisiblePages = 7;
    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
    let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);

    // Adjust start page if we're near the end
    if (endPage - startPage < maxVisiblePages - 1) {
      startPage = Math.max(1, endPage - maxVisiblePages + 1);
    }

    // Add first page and ellipsis if needed
    if (startPage > 1) {
      addPageNumber(1);
      if (startPage > 2) {
        addEllipsis();
      }
    }

    // Add visible page numbers
    for (let i = startPage; i <= endPage; i++) {
      addPageNumber(i);
    }

    // Add ellipsis and last page if needed
    if (endPage < totalPages) {
      if (endPage < totalPages - 1) {
        addEllipsis();
      }
      addPageNumber(totalPages);
    }
  }

  function addPageNumber(pageNum) {
    const pageSpan = document.createElement('span');
    pageSpan.className = 'page';
    
    if (pageNum === currentPage) {
      pageSpan.classList.add('current');
      pageSpan.textContent = pageNum;
    } else {
      const pageLink = document.createElement('a');
      pageLink.href = '#';
      pageLink.textContent = pageNum;
      pageLink.addEventListener('click', (e) => {
        e.preventDefault();
        goToPage(pageNum);
      });
      pageSpan.appendChild(pageLink);
    }
    
    pageNumbers.appendChild(pageSpan);
  }

  function addEllipsis() {
    const ellipsis = document.createElement('span');
    ellipsis.className = 'page';
    ellipsis.textContent = '…';
    pageNumbers.appendChild(ellipsis);
  }

  function goToPage(pageNum) {
    currentPage = pageNum;
    displayPage();
    
    // Scroll to top of results
    repsContainer.scrollIntoView({ behavior: 'smooth' });
  }

  function filterAndPaginate() {
    filteredCards = getFilteredCards();
    currentPage = 1; // Reset to first page when filtering
    displayPage();
  }

  // Event listeners
  repSearch.addEventListener('input', filterAndPaginate);
  territoryFilter.addEventListener('change', filterAndPaginate);

  prevPage.addEventListener('click', (e) => {
    e.preventDefault();
    if (currentPage > 1) {
      goToPage(currentPage - 1);
    }
  });

  nextPage.addEventListener('click', (e) => {
    e.preventDefault();
    const totalPages = Math.ceil(filteredCards.length / ITEMS_PER_PAGE);
    if (currentPage < totalPages) {
      goToPage(currentPage + 1);
    }
  });

  // Initialize
  filterAndPaginate();
</script>

{% schema %}
{
  "name": "Sales Rep Metafields",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_search_controls",
      "label": "Show search controls",
      "default": true,
      "info": "Only check this for ONE section per page. This section will control search/pagination for all rep sections on the page."
    },
    {
      "type": "checkbox",
      "id": "include_customer_reps",
      "label": "Include representatives from customer data",
      "default": true,
      "info": "Pull sales rep information from customer metafields (sr_name, sr_email, etc.)"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Sales Representatives"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description",
      "default": "<p>Contact our professional sales team for assistance</p>"
    },
    {
      "type": "number",
      "id": "items_per_page",
      "label": "Representatives per page",
      "default": 25,
      "info": "Number of representatives to show per page (recommended: 10-50)"
    }
  ],
  "blocks": [
    {
      "type": "rep",
      "name": "Sales Representative",
      "settings": [
        {
          "type": "text",
          "id": "name",
          "label": "Name",
          "default": "Representative Name"
        },
        {
          "type": "text",
          "id": "rep_group",
          "label": "Rep Group"
        },
        {
          "type": "text",
          "id": "position",
          "label": "Position"
        },
        {
          "type": "text",
          "id": "territory",
          "label": "Territory"
        },
        {
          "type": "text",
          "id": "territory_detail",
          "label": "Territory Detail",
          "info": "Will display in italics below territory"
        },
        {
          "type": "text",
          "id": "email",
          "label": "Email"
        },
        {
          "type": "text",
          "id": "phone",
          "label": "Phone"
        },
        {
          "type": "url",
          "id": "website",
          "label": "Website",
          "info": "Include https:// for external links"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Sales Representatives"
    }
  ]
}
{% endschema %}