{{ 'custom-art-of-light.css' | asset_url | stylesheet_tag }}
<section
    class="art-of-light"
    {% unless section.settings.store == "all" %}
        data-store="{{ section.settings.store }}"
    {% endunless %}
>
    <div class="container">
        <div class="header">
            {% if section.settings.title %}
                <h2 class="title">{{ section.settings.title }}</h2>
            {% endif %}
            {% if section.settings.subtitle %}
                <p class="subtitle">{{ section.settings.subtitle }}</p>
            {% endif %}
        </div>

        <div class="colors">
            {% for block in section.blocks %}
                <div class="color-item{% if forloop.first %} active{% endif %}" data-color="{{ block.id }}">
                    {% if block.settings.icon %}
                        <img src="{{ block.settings.icon | img_url: 'small' }}" alt="{{ block.settings.label }}" class="color-icon">
                    {% endif %}
                    {% if block.settings.label %}
                        <p class="color-label">{{ block.settings.label }}</p>
                    {% endif %}
                </div>
            {% endfor %}
        </div>

        <div class="social-grid-wrapper">
            {% for block in section.blocks %}
                <div class="social-grid" id="gallery-{{ block.id }}" {% unless forloop.first %}style="display: none;"{% endunless %}>
                    {% for i in (1..8) %}
                        {% assign key = "image_" | append: i %}
                        {% assign url_key = "url_" | append: i %}
                        {% assign image = block.settings[key] %}
                        {% assign image_url = block.settings[url_key] %}
                        {% if image %}
                            <div class="social-item">
                                {% if image_url %}
                                    <a href="{{ image_url }}" target="_blank" rel="noopener" class="image-link">
                                        <img src="{{ image | img_url: '1024x1024' }}" alt="Social Image {{ i }}">
                                    </a>
                                {% else %}
                                    <img src="{{ image | img_url: '1024x1024' }}" alt="Social Image {{ i }}">
                                {% endif %}
                            </div>
                        {% endif %}
                    {% endfor %}
                </div>
            {% endfor %}
        </div>

        {% if section.settings.button_text and section.settings.button_link %}
            <div class="button-wrapper">
                <a href="{{ section.settings.button_link }}" class="cta-button">{{ section.settings.button_text }}</a>
            </div>
        {% endif %}
    </div>
</section>

<style>
.image-link {
    display: block;
    transition: opacity 0.3s ease, transform 0.3s ease;
}

.image-link:hover {
    opacity: 0.9;
    transform: scale(1.02);
}

.social-item {
    cursor: pointer;
}

.social-item img {
    transition: transform 0.3s ease;
}

.image-link img {
    width: 100%;
    height: auto;
}

/* Active state styling for color items */
.color-item.active {
    opacity: 1;
    transform: scale(1.05);
    position: relative;
}

.color-item.active::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 50%;
    transform: translateX(-50%);
    width: 30px;
    height: 2px;
    background: currentColor;
    opacity: 0.6;
    border-radius: 1px;
}

.color-item {
    opacity: 0.7;
    transition: opacity 0.3s ease, transform 0.3s ease;
    cursor: pointer;
}

.color-item:hover {
    opacity: 1;
}

/* Smooth transitions for galleries */
.social-grid {
    transition: opacity 0.3s ease;
}

.social-grid-wrapper {
    position: relative;
    min-height: 300px;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const colorContainers = document.querySelectorAll('.art-of-light');
    
    colorContainers.forEach(container => {
        const colorItems = container.querySelectorAll('.color-item');
        const galleries = container.querySelectorAll('.social-grid');
        let currentIndex = 0;
        let autoRotateInterval;
        let isUserInteracting = false;
        
        // No rotation needed if there's only one color
        if (colorItems.length <= 1) return;
        
        // Initialize the first color and gallery as active
        colorItems[0].classList.add('active');
        galleries[0].style.display = 'block';
        galleries[0].style.opacity = '1';
        
        function showGallery(index) {
            // Hide all galleries
            galleries.forEach(gallery => {
                gallery.style.display = 'none';
                gallery.style.opacity = '0';
            });
            
            // Remove active class from all color items
            colorItems.forEach(item => item.classList.remove('active'));
            
            // Show the current gallery with fade effect
            galleries[index].style.display = 'block';
            galleries[index].style.opacity = '1';
            
            // Mark the current color as active
            colorItems[index].classList.add('active');
        }
        
        function nextColor() {
            if (!isUserInteracting) {
                currentIndex = (currentIndex + 1) % colorItems.length;
                showGallery(currentIndex);
                console.log(`ðŸŽ¯ Auto-rotated to color ${currentIndex + 1}/${colorItems.length}`);
            }
        }
        
        // Add click events to color items
        colorItems.forEach((item, index) => {
            item.addEventListener('click', () => {
                currentIndex = index;
                showGallery(currentIndex);
                
                // Pause auto-rotation temporarily when user clicks
                isUserInteracting = true;
                clearInterval(autoRotateInterval);
                
                // Resume auto-rotation after 8 seconds
                setTimeout(() => {
                    isUserInteracting = false;
                    autoRotateInterval = setInterval(nextColor, 4000);
                }, 8000);
            });
            
            // Pause on hover
            item.addEventListener('mouseenter', () => {
                isUserInteracting = true;
            });
            
            item.addEventListener('mouseleave', () => {
                setTimeout(() => {
                    isUserInteracting = false;
                }, 1000);
            });
        });
        
        // Start the auto-rotation - simple approach like your working slideshow
        setTimeout(() => {
            autoRotateInterval = setInterval(nextColor, 4000); // Change every 4 seconds
            console.log('ðŸŽ¨ Art of Light auto-rotation started');
        }, 2000); // Start after 2 seconds
        
        // Pause when page is not visible
        document.addEventListener('visibilitychange', () => {
            if (document.hidden) {
                clearInterval(autoRotateInterval);
            } else if (!isUserInteracting) {
                autoRotateInterval = setInterval(nextColor, 4000);
            }
        });
    });
});
</script>

{% schema %}
{
  "name": "Art of Light with Colors",
  "settings": [
    {
      "type": "select",
      "id": "store",
      "label": "Store",
      "info": "Populate this to show only on specific store",
      "options": [
        { "value": "all", "label": "Show On Both" },
        { "value": "all brands", "label": "All Brands" },
        { "value": "quorum", "label": "Quorum" },
        { "value": "oxygen", "label": "Oxygen" }
      ],
      "default": "all"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "The ART OF LIGHT"
    },
    {
      "type": "textarea",
      "id": "subtitle",
      "label": "Subtitle Paragraph",
      "default": "Our lighting, fans, and mirrors are the finishing touches that turn any room into a place you'll love. Each piece is crafted to be the color, shape, and style that brings your space to life. Explore some of our favorites below."
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "More Inspiration"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "Button Link"
    }
  ],
  "blocks": [
    {
      "type": "color_images",
      "name": "Color + Images Block",
      "settings": [
        {
          "type": "text",
          "id": "label",
          "label": "Color Label"
        },
        {
          "type": "image_picker",
          "id": "icon",
          "label": "Color Icon Image"
        },
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "Image 1"
        },
        {
          "type": "url",
          "id": "url_1",
          "label": "Image 1 URL",
          "info": "Optional link for Image 1 - opens in new tab"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "Image 2"
        },
        {
          "type": "url",
          "id": "url_2",
          "label": "Image 2 URL",
          "info": "Optional link for Image 2 - opens in new tab"
        },
        {
          "type": "image_picker",
          "id": "image_3",
          "label": "Image 3"
        },
        {
          "type": "url",
          "id": "url_3",
          "label": "Image 3 URL",
          "info": "Optional link for Image 3 - opens in new tab"
        },
        {
          "type": "image_picker",
          "id": "image_4",
          "label": "Image 4"
        },
        {
          "type": "url",
          "id": "url_4",
          "label": "Image 4 URL",
          "info": "Optional link for Image 4 - opens in new tab"
        },
        {
          "type": "image_picker",
          "id": "image_5",
          "label": "Image 5"
        },
        {
          "type": "url",
          "id": "url_5",
          "label": "Image 5 URL",
          "info": "Optional link for Image 5 - opens in new tab"
        },
        {
          "type": "image_picker",
          "id": "image_6",
          "label": "Image 6"
        },
        {
          "type": "url",
          "id": "url_6",
          "label": "Image 6 URL",
          "info": "Optional link for Image 6 - opens in new tab"
        },
        {
          "type": "image_picker",
          "id": "image_7",
          "label": "Image 7"
        },
        {
          "type": "url",
          "id": "url_7",
          "label": "Image 7 URL",
          "info": "Optional link for Image 7 - opens in new tab"
        },
        {
          "type": "image_picker",
          "id": "image_8",
          "label": "Image 8"
        },
        {
          "type": "url",
          "id": "url_8",
          "label": "Image 8 URL",
          "info": "Optional link for Image 8 - opens in new tab"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Art of Light Colors"
    }
  ]
}
{% endschema %}